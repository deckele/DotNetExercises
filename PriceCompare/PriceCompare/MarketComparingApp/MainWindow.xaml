<Window 
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MarketComparingApp"
        x:Class="MarketComparingApp.MainWindow"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:viewModel="clr-namespace:MarketComparingApp.ViewModel"
        mc:Ignorable="d"
        Title="Market Comparing App" Height="700" Width="1200"
        Background="Wheat" d:DataContext="{d:DesignInstance viewModel:MainWindowViewModel}" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <CollectionViewSource x:Key="NumberCollection" Source="{Binding DropDownItemQuantityMenu}" />
    </Window.Resources>

    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Background.jpg"/>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250*"/>
            <ColumnDefinition Width="75*"/>
            <ColumnDefinition Width="250*"/>
        </Grid.ColumnDefinitions>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="18"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="200*"/>
            <RowDefinition Height="200*"/>
        </Grid.RowDefinitions>
        
        <Border Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="5" 
                Margin="5,40,5,40" Opacity="0.6" Background="DarkGray" Panel.ZIndex="0" />
        
        <DockPanel Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open" Command="{Binding OpenCommand}" />
                    <MenuItem Header="_Save" />
                    <Separator />
                    <MenuItem Header="_Exit" Command="{Binding ExitCommand}"/>
                </MenuItem>
                <MenuItem Header="_Tools">
                    <MenuItem Header="_Manage users"/>
                    <MenuItem Header="_Update Database" Command="{Binding UpdateDatabaseCommand}"/>
                    <MenuItem Header="_Show groups" IsCheckable="True" IsChecked="True" />
                </MenuItem>
            </Menu>
        </DockPanel>

        <TextBox Grid.Row="1" Grid.Column="0" Text ="All Items" FontSize="30" 
                 IsReadOnly="True" BorderBrush="Transparent"
                 HorizontalAlignment="Center" Margin="4" Background="Transparent" Foreground="AliceBlue"/>
        <TextBox Grid.Row="1" Grid.Column="2" Text ="Shopping Cart" FontSize="30" 
                 IsReadOnly="True" BorderBrush="Transparent"
                 HorizontalAlignment="Center" Margin="4" Background="Transparent" Foreground="AliceBlue"/>
        
        <StackPanel VerticalAlignment="Top"
                    Orientation="Vertical" 
                    Grid.Row="2" Width="82" Grid.Column="1" Height="75" Margin="0,20,0,0">
            <Button Name="AddButton" Command="{Binding AddCommand}" 
                    CommandParameter="{Binding Items, ElementName=AllItemsDataGrid}"
                    VerticalAlignment="Center" HorizontalAlignment="Center" 
                    Content="Add &gt;&gt;" 
                    Width="70" Height="25"
                    Margin="5" />
            <Button Name="RemoveButton" Command="{Binding RemoveCommand}" 
                    CommandParameter="{Binding ElementName=SelectedItemsDataGrid, Path=SelectedItems}"
                    VerticalAlignment="Center" HorizontalAlignment="Right" 
                    Content="&lt;&lt; Remove"
                    Width="70" Height="25"
                    Margin="5" />
        </StackPanel>
        
        <StackPanel VerticalAlignment="Bottom"
                    Orientation="Vertical" 
                    Grid.Row="2" Grid.Column="1" Margin="5,5,5,40">
            <Button Name="CompareButton" Content="Compare!" 
                    Command="{Binding CompareCommand}" 
                    VerticalAlignment="Center" HorizontalAlignment="Center" 
                    Width="60" Height="50" Background="Beige"/>
        </StackPanel>

        <DataGrid x:Name ="AllItemsDataGrid" SelectionMode="Extended"
                  Grid.Row="2" Grid.Column="0" Opacity="0.9"
                  ItemsSource="{Binding AllItems}"
                  AutoGenerateColumns="False" EnableRowVirtualization="True"
                  Margin="40,10,40,10" 
                  RowDetailsVisibilityMode="Visible" 
                  FlowDirection="RightToLeft" VerticalScrollBarVisibility="Visible">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Quantity" Width="SizeToHeader"> 
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="QuantityColumn" SelectedItem="{Binding AllItems.Item.ItemQuantity}"
                                        ItemsSource="{Binding Source={StaticResource NumberCollection}}" 
                                        IsSynchronizedWithCurrentItem="False" SelectionChanged="OnSelectionChanged_AllItemsDataGrid" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn IsReadOnly="True" x:Name="NameColumn" Binding="{Binding Item.Name}" 
                                    Header="Name" Width="240*" />
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid x:Name ="SelectedItemsDataGrid" SelectionMode="Extended"
                  Grid.Row="2" Grid.Column="2" Opacity="0.9"
                  ItemsSource="{Binding SelectedItems}"
                  AutoGenerateColumns="False" EnableRowVirtualization="True"
                  Margin="40,10,40,10" 
                  RowDetailsVisibilityMode="Visible"
                  FlowDirection="RightToLeft" VerticalScrollBarVisibility="Visible">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="Quantity" Width="SizeToHeader">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <ComboBox x:Name="QuantityColumn" SelectedItem="{Binding AllItems.Item.ItemQuantity, Mode=TwoWay}" 
                                        ItemsSource="{Binding Source={StaticResource NumberCollection} }"
                                        IsSynchronizedWithCurrentItem="False" SelectionChanged="OnSelectionChanged_AllItemsDataGrid"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding Item.Name}" 
                                    Header="Name" Width="240*" />
            </DataGrid.Columns>
        </DataGrid>

        <DataGrid x:Name ="CartsComparingDataGrid" SelectionMode="Extended"
                  Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3" Opacity="0.9"
                  ItemsSource="{Binding Carts}"
                  AutoGenerateColumns="False" EnableRowVirtualization="True"
                  Margin="10,15,10,20" 
                  RowDetailsVisibilityMode="Visible" 
                  FlowDirection="RightToLeft" VerticalScrollBarVisibility="Visible">
            <DataGrid.Columns>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding CartTotalPrice}" 
                                    Header="Total Cart Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ChainName}" 
                                    Header="Chain Name" Width="100*"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding StoreName}" 
                                    Header="Store Name" Width="120*"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding City}" 
                                    Header="City" Width="80*"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding Adress}" 
                                    Header="Adress" Width="180*" />
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding LowestPriceItem.Item.Name}" 
                                    Header="LowestPrice" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding LowestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding SecondLowestPriceItem.Item.Name}" 
                                    Header="SecondLowest" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding SecondLowestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ThirdLowestPriceItem.Item.Name}" 
                                    Header="ThirdLowest" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ThirdLowestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding HighestPriceItem.Item.Name}" 
                                    Header="HighestPrice" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding HighestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding SecondHighestPriceItem.Item.Name}" 
                                    Header="SecondHighest" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding SecondHighestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ThirdHighestPriceItem.Item.Name}" 
                                    Header="ThirdHighest" Width="SizeToHeader"/>
                <DataGridTextColumn IsReadOnly="True" Binding="{Binding ThirdHighestPriceItem.ItemPrice}" 
                                    Header="Price" Width="SizeToHeader"/>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
